<?xml version="1.0" ?>
<robot name="4wd_test">

<link name="base_link">

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.40 0.20 0.16"/>
      </geometry>
    </collision>

    <visual>
        <origin xyz=" 0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.40 0.20 0.16"/>
        </geometry>
        <material name="yellow">
            <color rgba="1 0.4 0 1"/>
        </material>
    </visual>

</link>


<joint name="dummy_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="dummy_link"/>
    <axis xyz="0 0 0"/>
</joint>

<link name="dummy_link">

  <inertial>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <mass value="10"/>
    <inertia
      ixx="0.05" ixy="0.0" ixz="0.0"
      iyy="0.16" iyz="0.0"
      izz="0.17"/>
  </inertial>

</link>

    <!-- gazebo planar move control -->
<!--<gazebo>
  <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <odometryRate>20.0</odometryRate>
    <robotBaseFrame>dummy_link</robotBaseFrame>
  </plugin>
</gazebo>-->


<joint name="left_back_wheel_joint" type="continuous">
    <origin xyz="-0.1 0.1 -0.08" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="left_back_wheel_link"/>
    <axis xyz="0 1 0"/>
</joint>

<link name="left_back_wheel_link">

  <collision>
    <origin xyz="0 0 0" rpy="1.5707 0 0" />
    <geometry>
      <cylinder radius="0.06" length = "0.025"/>
    </geometry>
  </collision>

  <visual>
    <origin xyz="0 0 0" rpy="1.5707 0 0" />
     <geometry>
       <cylinder radius="0.06" length = "0.025"/>
     </geometry>
     <material name="blue">
       <color rgba="0 0 1 0.9"/>
     </material>
  </visual>

  <inertial>
    <origin xyz="0 0 0" rpy="1.5707 0 0"/>
    <mass value="0.5"/>
    <inertia
      ixx="0.000153" ixy="0.0" ixz="0.0"
      iyy="0.000249" iyz="0.0"
      izz="0.000153"/>
  </inertial>
</link>


<gazebo reference="left_back_wheel_link">
  <mu1>0.25</mu1>
  <mu2>0.25</mu2>
  <kp>500000.0</kp>
  <kd>10.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>0.1</maxVel>
  <fdir1>1 0 0</fdir1>
  <material>Gazebo/FlatBlack</material>
</gazebo>

<joint name="right_back_wheel_joint" type="continuous">
    <origin xyz="-0.1 -0.1 -0.08" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="right_back_wheel_link"/>
    <axis xyz="0 1 0"/>
</joint>

<link name="right_back_wheel_link">
  <collision>
    <origin xyz="0 0 0" rpy="1.5707 0 0" />
    <geometry>
      <cylinder radius="0.06" length = "0.025"/>
    </geometry>
  </collision>

  <visual>
    <origin xyz="0 0 0" rpy="1.5707 0 0" />
    <geometry>
       <cylinder radius="0.06" length = "0.025"/>
    </geometry>
    <material name="blue">
       <color rgba="0 0 1 0.9"/>
    </material>
  </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="1.5707 0 0"/>
      <mass value="0.5"/>
      <inertia
        ixx="0.000153" ixy="0.0" ixz="0.0"
        iyy="0.000249" iyz="0.0"
        izz="0.000153"/>
    </inertial>
</link>


<gazebo reference="right_back_wheel_link">
  <mu1>0.25</mu1>
  <mu2>0.25</mu2>
  <kp>500000.0</kp>
  <kd>10.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>0.1</maxVel>
  <fdir1>1 0 0</fdir1>
  <material>Gazebo/FlatBlack</material>
</gazebo>

<joint name="left_front_wheel_joint" type="continuous">
    <origin xyz="0.1 0.1 -0.08" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="left_front_wheel_link"/>
    <axis xyz="0 1 0"/>
</joint>

<link name="left_front_wheel_link">

  <collision>
    <origin xyz="0 0 0" rpy="1.5707 0 0" />
    <geometry>
      <cylinder radius="0.06" length = "0.025"/>
    </geometry>
  </collision>

    <visual>
        <origin xyz="0 0 0" rpy="1.5707 0 0" />
        <geometry>
            <cylinder radius="0.06" length = "0.025"/>
        </geometry>
        <material name="blue">
            <color rgba="0 0 1 0.9"/>
        </material>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="1.5707 0 0"/>
      <mass value="0.5"/>
      <inertia
        ixx="0.000153" ixy="0.0" ixz="0.0"
        iyy="0.000249" iyz="0.0"
        izz="0.000153"/>
    </inertial>
</link>


<gazebo reference="left_front_wheel_link">
  <mu1>0.25</mu1>
  <mu2>0.25</mu2>
  <kp>500000.0</kp>
  <kd>10.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>0.1</maxVel>
  <fdir1>1 0 0</fdir1>
  <material>Gazebo/FlatBlack</material>
</gazebo>

<joint name="right_front_wheel_joint" type="continuous">
    <origin xyz="0.1 -0.1 -0.08" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="right_front_wheel_link"/>
    <axis xyz="0 1 0"/>
</joint>

<link name="right_front_wheel_link">

  <collision>
    <origin xyz="0 0 0" rpy="1.5707 0 0" />
    <geometry>
      <cylinder radius="0.06" length = "0.025"/>
    </geometry>
  </collision>

    <visual>
        <origin xyz="0 0 0" rpy="1.5707 0 0" />
        <geometry>
            <cylinder radius="0.06" length = "0.025"/>
        </geometry>
        <material name="blue">
            <color rgba="0 0 1 0.9"/>
        </material>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="1.5707 0 0"/>
      <mass value="0.5"/>
      <inertia
        ixx="0.000153" ixy="0.0" ixz="0.0"
        iyy="0.000249" iyz="0.0"
        izz="0.000153"/>
    </inertial>
</link>


<gazebo reference="right_front_wheel_link">
  <mu1>0.25</mu1>
  <mu2>0.25</mu2>
  <kp>500000.0</kp>
  <kd>10.0</kd>
  <minDepth>0.001</minDepth>
  <maxVel>0.1</maxVel>
  <fdir1>1 0 0</fdir1>
  <material>Gazebo/FlatBlack</material>
</gazebo>

<!-- camera -->

<joint name="left_camera_joint" type="fixed">
    <origin xyz="0.17 -0.05 0.09" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="left_camera_link"/>
</joint>


<link name="left_camera_link">
    <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 0" />
        <geometry>
            <box size="0.03 0.04 0.02" />
        </geometry>
        <material name="black">
            <color rgba="0 0 0 0.95"/>
        </material>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia
        ixx="0.000001" ixy="0.0" ixz="0.0"
        iyy="0.000001" iyz="0.0"
        izz="0.000001"/>
    </inertial>
 </link>

<gazebo reference="left_camera_link">
  <sensor type="camera" name="camera1">
    <update_rate>30.0</update_rate>
    <camera name="head">
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>800</width>
        <height>800</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
             channels, which at that point lie in the range [0,1]. -->
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <cameraName>4wd_test/camera1</cameraName>
      <imageTopicName>image_raw</imageTopicName>
      <cameraInfoTopicName>camera_info</cameraInfoTopicName>
      <frameName>camera_link</frameName>
      <hackBaseline>0.07</hackBaseline>
      <distortionK1>0.0</distortionK1>
      <distortionK2>0.0</distortionK2>
      <distortionK3>0.0</distortionK3>
      <distortionT1>0.0</distortionT1>
      <distortionT2>0.0</distortionT2>
    </plugin>
  </sensor>
</gazebo>


<joint name="right_camera_joint" type="fixed">
    <origin xyz="0.17 0.05 0.09" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="right_camera_link"/>
</joint>


<link name="right_camera_link">
    <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 0" />
        <geometry>
            <box size="0.03 0.04 0.02" />
        </geometry>
        <material name="black">
            <color rgba="0 0 0 0.95"/>
        </material>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia
        ixx="0.000001" ixy="0.0" ixz="0.0"
        iyy="0.000001" iyz="0.0"
        izz="0.000001"/>
    </inertial>
</link>

<gazebo reference="right_camera_link">
  <sensor type="camera" name="camera2">
    <update_rate>30.0</update_rate>
    <camera name="head">
      <horizontal_fov>1.3962634</horizontal_fov>
      <image>
        <width>800</width>
        <height>800</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>300</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
             channels, which at that point lie in the range [0,1]. -->
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>0.0</updateRate>
      <cameraName>4wd_test/camera2</cameraName>
      <imageTopicName>image_raw</imageTopicName>
      <cameraInfoTopicName>camera_info</cameraInfoTopicName>
      <frameName>camera_link</frameName>
      <hackBaseline>0.07</hackBaseline>
      <distortionK1>0.0</distortionK1>
      <distortionK2>0.0</distortionK2>
      <distortionK3>0.0</distortionK3>
      <distortionT1>0.0</distortionT1>
      <distortionT2>0.0</distortionT2>
    </plugin>
  </sensor>
</gazebo>

<!-- sensor -->

<!--<joint name="laser_joint" type="fixed">
    <origin xyz="0 0 0.105" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="laser_link"/>
</joint>-->


<!--<link name="laser_link">
    <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 0" />
        <geometry>
            <cylinder length="0.05" radius="0.05"/>
        </geometry>
        <material name="black"/>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia
        ixx="0.1" ixy="0.0" ixz="0.0"
        iyy="0.1" iyz="0.0"
        izz="0.1"/>
    </inertial>
</link>-->

<!--<gazebo reference="laser_link">-->
<!-- Add a ray sensor, and give it a name -->
<!--<sensor type="ray" name="sensor">-->

  <!-- Position the ray sensor based on the specification. Also rotate
       it by 90 degrees around the X-axis so that the <horizontal> rays
       become vertical -->
<!--  <pose>0 0 -0.004645 1.5707 0 0</pose>-->

  <!-- Enable visualization to see the rays in the GUI -->
<!--  <visualize>true</visualize>-->

  <!-- Set the update rate of the sensor -->
<!--  <update_rate>30</update_rate>-->
<!--  <ray>-->

    <!-- The scan element contains the horizontal and vertical beams.
         We are leaving out the vertical beams for this tutorial. -->
<!--    <scan>-->

      <!-- The horizontal beams -->
<!--      <horizontal>-->
        <!-- The velodyne has 32 beams(samples) -->
<!--        <samples>32</samples>-->

        <!-- Resolution is multiplied by samples to determine number of
             simulated beams vs interpolated beams. See:
             http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
             -->
<!--        <resolution>1</resolution>-->

        <!-- Minimum angle in radians -->
<!--        <min_angle>-0.53529248</min_angle>-->

        <!-- Maximum angle in radians -->
<!--        <max_angle>0.18622663</max_angle>
      </horizontal>
    </scan>-->

    <!-- Range defines characteristics of an individual beam -->
<!--    <range>-->

      <!-- Minimum distance of the beam -->
<!--      <min>0.05</min>-->

      <!-- Maximum distance of the beam -->
<!--      <max>70</max>-->

      <!-- Linear resolution of the beam -->
<!--      <resolution>0.02</resolution>
    </range>
  </ray>
</sensor>
</gazebo>-->

<!-- imu sensor -->
<joint name="imu_joint" type="fixed">
    <origin xyz="0 0 0.08" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
</joint>


<link name="imu_link">
    <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 0" />
        <geometry>
            <cylinder length="0.01" radius="0.03"/>
        </geometry>
        <material name="black"/>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia
        ixx="0.000001" ixy="0.0" ixz="0.0"
        iyy="0.000001" iyz="0.0"
        izz="0.000001"/>
    </inertial>
</link>

<gazebo reference="imu_link">
  <gravity>true</gravity>
  <sensor name="imu_sensor" type="imu">
    <always_on>true</always_on>
    <update_rate>50.0</update_rate>
    <visualize>true</visualize>
    <topic>imu</topic>
    <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
      <robotNamespace>/4wd_test</robotNamespace>
      <topicName>imu</topicName>
      <bodyName>imu_link</bodyName>
      <updateRateHZ>50.0</updateRateHZ>
      <gaussianNoise>0.0</gaussianNoise>
      <xyzOffset>0 0 0</xyzOffset>
      <rpyOffset>0 0 0</rpyOffset>
      <frameName>imu_link</frameName>
    </plugin>
    <pose>0 0 0 0 0 0</pose>
  </sensor>
</gazebo>

<!-- GPS -->

<joint name="gps_joint" type="fixed">
    <origin xyz="0 0 0.09" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="gps_link"/>
</joint>


<link name="gps_link">
    <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 0" />
        <geometry>
            <cylinder length="0.01" radius="0.03"/>
        </geometry>
        <material name="white"/>
    </visual>
</link>

<gazebo>
    <plugin name="gps" filename="libhector_gazebo_ros_gps.so">
        <robotNamespace>/4wd_test</robotNamespace>
        <alwaysOn>1</alwaysOn>
        <updateRate>50.0</updateRate>
        <bodyName>gps_link</bodyName>
        <frameId>gps_link</frameId>
        <referenceHeading>-90</referenceHeading>
        <topicName>fix</topicName>
        <velocityTopicName>fix_velocity</velocityTopicName>
        <drift>0.0 0.0 0.0</drift>
        <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
        <velocityDrift>0 0 0</velocityDrift>
        <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
    </plugin>
</gazebo>

<!-- gazebo_ros_control and transmission -->
<gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/4wd_test</robotNamespace>
    </plugin>
</gazebo>

<!-- gazebo skid_steer drive-->
<!--<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <leftFrontJoint>left_front_wheel_joint</leftFrontJoint>
    <rightFrontJoint>right_front_wheel_joint</rightFrontJoint>
    <leftRearJoint>left_back_wheel_joint</leftRearJoint>
    <rightRearJoint>right_back_wheel_joint</rightRearJoint>
    <wheelSeparation>0.2</wheelSeparation>
    <wheelDiameter>0.06</wheelDiameter>
    <robotBaseFrame>base_link</robotBaseFrame>
    <torque>20</torque>
    <topicName>cmd_vel</topicName>
    <broadcastTF>false</broadcastTF>
  </plugin>
</gazebo>-->

<!--<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <updateRate>50</updateRate>
    <leftJoint>left_front_wheel_joint</leftJoint>
   <rightJoint>right_front_wheel_joint</rightJoint>
    <wheelSeparation>0.2</wheelSeparation>
    <wheelDiameter>0.06</wheelDiameter>
    <wheelAcceleration>1.0</wheelAcceleration>
    <wheelTorque>20</wheelTorque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
    <odometrySource>1</odometrySource>
    <publishWheelTF>true</publishWheelTF>
    <publishOdom>true</publishOdom>
    <publishWheelJointState>true</publishWheelJointState>
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>-->


<transmission name="left_back_wheel_tran">
  <type>transmission_interface/SimpleTransmission</type>
  <joint name="left_back_wheel_joint">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
  <actuator name="left_back_wheel_motor">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
</transmission>

<transmission name="right_back_wheel_tran">
  <type>transmission_interface/SimpleTransmission</type>
  <joint name="right_back_wheel_joint">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
  <actuator name="right_back_wheel_motor">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
</transmission>

<transmission name="left_front_wheel_tran">
  <type>transmission_interface/SimpleTransmission</type>
  <joint name="left_front_wheel_joint">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
  <actuator name="left_front_wheel_motor">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
</transmission>

<transmission name="right_front_wheel_tran">
  <type>transmission_interface/SimpleTransmission</type>
  <joint name="right_front_wheel_joint">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
  <actuator name="right_front_wheel_motor">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
</transmission>

</robot>
